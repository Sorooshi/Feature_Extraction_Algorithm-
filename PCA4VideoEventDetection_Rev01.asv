% This Code is created by Soroosh Shalileh to implemet the PCA algorithm
% for Event Detection in Videos.
% PCA algorithm Ref No. is[9]

clear all; close all; clear memory; clc;

%% Read and play back the movie file
% Reading the input video
Video1 = VideoReader('D:\testing\vids\ira_jump.avi');
get(Video1);

nFrames = Video1.NumberOfFrames;
vidHeight = Video1.Height;
vidWidth = Video1.Width;

% Preallocate the movie structure
mov(1:nFrames) = ...
    struct('cdata',zeros(vidHeight,vidWidth, 3,'uint8'),...
    'colormap',[]);

% Read one frame at a time
for f=1:nFrames
    mov(f).cdata = read(Video1,f);
end

% Size a figure based on the video's width and height
hf = figure;
set(hf, 'position', [150 150 vidWidth vidHeight])

% Play back the movie once at the video's frame rate
movie(hf, mov, 1, Video1.FrameRate);

%% Dividing the input video into a single frame :
% Thus we can use each frame as a single input image to apple PCA algorithm

% Frame slicing :
for i=1:nFrames
    SingleFrame(:,:,:,i) = read(Video1,i);
    SingleGrayFrame(:,:,i) = im2double(rgb2gray(SingleFrame(:,:,:,i)));
end

% Preprocessing Operations:
X = im2double(SingleGrayFrame);
NormalizedFrame = featureNormalize(X);


%% Calculating the Covariance matrix or sigma :
Nrow = size(NormalizedFrame,1);
for i=1:nFrames
sigma(:,:,i) = (1/Nrow)*(NormalizedFrame(:,:,i)' * NormalizedFrame(:,:,i));
% sigma(i) = (1/m)*(NormalizedFrame(i)' * NormalizedFrame(i));
end

for i=1:nFrames
[U S V] = svd(sigma(:,:,i));
end
% PCA components = K
PCAComp = 180;

ReducedNormalizedFrame = zeros(size(NormalizedFrame,1),PCAComp);
U_Reduce = U(:,1:PCAComp);

for i=1: nFrames
    for j=1:Nrow
        for l=1:PCAComp
            x = NormalizedFrame(j,:)';
            ReducedNormalizedFrame(j,l) = x'*U_Reduce(i,:,l);
        end
    end
end
    
            







