% Soroosh Shalileh
% implementations for Event detection Report
% PCA algorithm Ref No. is[9]

clear all; close all; clc;

org_img_in = imread('D:\testing\image\lena_gray.jpg');
gry_img_in = rgb2gray((im2double(org_img_in)));
% figure; imshow(gry_img_in); title('Original Gray Level Image');

% Vectorize the image
[nRow nCol spare1] = size(gry_img_in);
vectorize_gry_img = reshape(gry_img_in,[1 nRow*nCol]);

%% PreProccessing Operation
mu = mean(vectorize_gry_img);
Scaled_img = bsxfun(@minus, vectorize_gry_img, mu);
sigma4Normalization = std(Scaled_img);
normalize_img = bsxfun(@rdivide,Scaled_img,sigma4Normalization);
% Testing and showing the result of preproccessing operation
% figure; imshow(reshape(normalize_img , nRow , nCol));title('Normilzed Image');
reshaped_normalize_img = (reshape(normalize_img , nRow , nCol));

%% PCA algorithm Implementation
m = nCol;
sigma = (1/m)*(reshaped_normalize_img' * reshaped_normalize_img);
[U S V] = svd(sigma);

%% Visualization of svd algorithm results
% % figure;
% % subplot(4,1,1);imshow(sigma);title('Showing sigma');
% % subplot(4,1,2);imshow(U);title('Showing U');
% % subplot(4,1,3);imshow(V);title('Showing V');
% % subplot(4,1,4);imshow(S);title('Showing S');

%% PCA Evalution and selecting the K component
k = 250;
Tempthr =1 ;
thr = 1;
% % % while Tempthr >= 0.95
% % %     K = K +1;
% % %     Tempthr = bsxfun(@rdivide,S(:,:),S(K,K));%reshape ,nRow , nCol);
% % % %    Tempthr = S(K,K)./S(:,:);%reshape ,nRow , nCol);
% % %         Tempthr = reshape(Tempthr,1,nRow*nCol);
% % % end
U_reduced = U(:,1:k);
z = reshaped_normalize_img * U_reduced;

% Reconstructing the image :
% img_reconstruct = U_reduced * z';
img_reconstruct = z * U_reduced';
figure;imshow(img_reconstruct);
